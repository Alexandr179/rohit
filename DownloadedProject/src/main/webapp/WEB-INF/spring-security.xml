<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:security="http://www.springframework.org/schema/security"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	   		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
			http://www.springframework.org/schema/security 
			http://www.springframework.org/schema/security/spring-security-3.2.xsd">

	<!-- This is where we configure Spring-Security -->
	<security:http auto-config="false" use-expressions="true"
		access-denied-page="/krams/auth/denied" entry-point-ref="authenticationEntryPoint">

		<security:intercept-url pattern="/krams/auth/login"
			access="permitAll" />
		<security:intercept-url pattern="/krams/main/admin"
			access="hasRole('ROLE_ADMIN')" />
		<security:intercept-url pattern="/krams/main/common"
			access="hasRole('ROLE_USER')" />
		<security:intercept-url pattern="/krams/main/users"
			access="hasRole('ROLE_USER')" />


		<!-- Querying the SessionRegistry for currently authenticated users and 
			their sessions http://static.springsource.org/spring-security/site/docs/3.1.x/reference/session-mgmt.html#list-authenticated-principals -->
		<security:custom-filter ref="authenticationFilter"
			position="FORM_LOGIN_FILTER" />
		<security:custom-filter ref="concurrencyFilter"
			position="CONCURRENT_SESSION_FILTER" />
		<security:session-management
			session-authentication-strategy-ref="sas" />
	</security:http>

	<bean id="authenticationFilter"
		class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter"
		p:sessionAuthenticationStrategy-ref="sas" p:authenticationManager-ref="authenticationManager" />



	<bean id="authenticationEntryPoint"
		class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint"
		p:loginFormUrl="/krams/auth/login" />

	<!-- Declare an authentication-manager to use a custom userDetailsService -->
	<!-- It's important to set the alias here because it's used by the authenticationFilter -->
	<security:authentication-manager alias="authenticationManager">
		<security:authentication-provider
			user-service-ref="userDetailsService">
		</security:authentication-provider>
	</security:authentication-manager>



	<security:user-service id="userDetailsService">
		<security:user name="john" password="123456"
			authorities="ROLE_USER, ROLE_ADMIN" />
		<security:user name="jane" password="123456"
			authorities="ROLE_USER" />
	</security:user-service>


	<bean id="concurrencyFilter"
		class="org.springframework.security.web.session.ConcurrentSessionFilter"
		p:sessionRegistry-ref="sessionRegistry" p:expiredUrl="/krams/auth/session-expired" />

	<bean id="sas"
		class="org.springframework.security.web.authentication.session.ConcurrentSessionControlStrategy"
		p:maximumSessions="1">
		<constructor-arg name="sessionRegistry" ref="sessionRegistry" />
	</bean>

	<!-- Maintains a registry of SessionInformation instances See: http://static.springsource.org/spring-security/site/docs/3.0.x/apidocs/org/springframework/security/core/session/SessionRegistry.html -->
	<bean id="sessionRegistry"
		class="org.springframework.security.core.session.SessionRegistryImpl" />
</beans>
